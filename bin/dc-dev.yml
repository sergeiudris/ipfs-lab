version: "3.8"

networks:
  base-network:
    driver: bridge
    name: ipfs-cube-network
  # ipfs-network:
  #   driver: bridge
  #   name: ipfs-network

volumes:
  ctx:
    driver: local
    driver_opts:
      type: none
      device: ../../
      # device: $PWD/${WEB_APP_PATH}
      o: bind

services:

  golang:
    image: ipfs-lab.golang
    build:
      context: ./golang
      dockerfile: ./Dockerfile
      args:
        workdir:  /ctx
    command: tail -f /dev/null
    # command: bash f dev
    # ports:
    #   - 8080:8080
    # networks:
    #   - base-network
    # user: 1000:1000
    volumes:
      - ./golang/.user:/root
      - ../../:/root/go/src
      # - type: volume
      #   source: deathstar-dir
      #   target: /root/.deathstar
      #   volume:
      #     nocopy: true
      # - ./app/.peer${PORTS_PREFIX}:/root/.deathstar
      - type: volume
        source: ctx
        target: /ctx
        volume:
          nocopy: true
    stdin_open: true
    tty: true
    deploy:
      resources:
        limits:
          cpus: '4'
          memory: 4096M

  app-jvm:
    image: ipfs-cube.app-jvm
    build:
      context: ./app-jvm
      dockerfile: ./dev.Dockerfile
      args:
        workdir:  /ctx/ipfs-lab/bin/app-jvm
    command: tail -f /dev/null
    # command: bash f dev
    ports:
      - 7788:7788
      - 3800:8080
      # - 8085:8080
    networks:
      - base-network
    # user: 1000:1000
    volumes:
      - ./app-jvm/.user:/root
      - /var/run/docker.sock:/var/run/docker.sock
      - type: volume
        source: ctx
        target: /ctx
        volume:
          nocopy: true
    stdin_open: true
    tty: true
    deploy:
      resources:
        limits:
          cpus: '4'
          memory: 13000M
